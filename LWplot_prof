#!/bin/sh
#======================================================================
#					 L W P L O T _ P R O F 
#                    doc: Fri Oct 14 09:42:36 2011
#                    dlm: Wed May 20 20:45:55 2015
#                    (c) 2011 A.M. Thurnherr
#                    uE-Info: 56 0 NIL 0 0 72 2 2 4 NIL ofnI
#======================================================================

# HISTORY:
#	Oct 14, 2011: - created
#	Oct 15, 2011: - added nsamp
#	Oct 16, 2011: - made depth tic-marks range dependent
#	Oct 17, 2011: - turned into filter
#				  - added %run_label
#	Nov 14, 2011: - added file layout check
#	Mar 12, 2012: - sh -> ksh as this does not work with /bin/sh on MacOSX 10.6.4
#   Apr 12, 2012: - made re-entrant
#	May 15, 2013: - BUG: plot separation lines/shading did not work any more
#   Oct 30, 2103: - got rid of non-portable echo -e
#	Apr  5, 2015: - made fixbb optional
#   Apr 16, 2015: - removed copy of input on stdout
#				  - changed shell from /bin/ksh to /bin/sh
#	Apr 26, 2015: - adapted to LADCP_w_regrid output
#				  - removed -N
#				  - moved run_label above plot area
#	May 19, 2015: - adapted to new layout (hab)
#				  - BUG: erroneously let .VKE profiles pass
#   May 20, 2015: - made it quit on EOF

#--------------------------------------------------
# Usage
#--------------------------------------------------

USAGE="Usage: $0 <eps-file> [in-file]"
	[ $# -eq 2 ] && exec <"$2" "$0" "$1"
	[ $# -ne 1 ] && { echo $USAGE >&2; exit 1; }
eps_file="$1"

#--------------------------------------------------
# Read Header Data
#--------------------------------------------------

read line
while [ -z "$done" -a -n "$line" ]
do
	[ -z "$out_basename" ] && out_basename=`expr -- "$line" : '#ANTS#PARAMS#.*out_basename{\([^}]*\)}`
	[ -z "$run_label" ] && run_label=`expr -- "$line" : '#ANTS#PARAMS#.*run_label{\([^}]*\)}`
	[ -z "$min_depth" ] && min_depth=`expr -- "$line" : '#ANTS#PARAMS#.*min_depth{\([^}]*\)}`
	[ -z "$max_depth" ] && max_depth=`expr -- "$line" : '#ANTS#PARAMS#.*max_depth{\([^}]*\)}`
	[ -z "$water_depth" ] && water_depth=`expr -- "$line" : '#ANTS#PARAMS#.*water_depth{\([^}]*\)}`
	newfields=`expr -- "$line" : '#ANTS#FIELDS# \(.*\)' | sed -e s/{//g -e s/}//g`
	[ -z "$newfields" ] || fields=$newfields
	done=`expr -- "$line" : '^[^#]\(.*\)'`
	read line
done

set -- $fields
[ "$1" = depth -a "$4" = dc_w -a "$5" = dc_w.mad -a "$6" = dc_w.nsamp -a \
  "$8" = uc_w  -a "$9" = uc_w.mad -a "${10}" = uc_w.nsamp ] || {
		echo "$0: file layout error ($1, $4, $5, $6, $8, $9, ${10})" >&2
		exit 1
}

#--------------------------------------------------
# Plot Data
#--------------------------------------------------

eps_file="$PWD/$eps_file"	# make outfile name absolute (hopefully, it is not already...)
mkdir /tmp/$$				# GMT makes tmpfiles and is not reentrant
cd /tmp/$$

TMPFILE=/tmp/$$.LWplot_prof
{
	echo $line
	sed s/#.*//
} > $TMPFILE

[ -f .gmtdefaults4 ] ||
	gmtset	PAPER_MEDIA letter+ \
			LABEL_FONT_SIZE 14 ANNOT_FONT_SIZE_PRIMARY 14 \
			WANT_EURO_FONT true \
	        PLOT_DEGREE_FORMAT ddd:mm:ssF

[ -n "$water_depth" ] && blim=`echo "scale=0;$water_depth/1+25"|bc` \
				      || blim=`echo "scale=0;$max_depth/1+25"|bc`

XTICS="-0.05 0.05 0.15"
XMIN=-0.1

[ -r ./.LWplot_prof ] && . ./.LWplot_prof

R=-R$XMIN/0.35/0/$blim
R2=-R-200/200/0/$blim
U=-R0/1/0/1
X=-JX10/-10

# FRAME
{ echo 0 $min_depth; echo 0 $max_depth; } | psxy -P -K $R $X > "$eps_file"
{ echo 0.07 $min_depth; echo 0.07 $max_depth; echo 0.18 $max_depth; echo 0.18 $min_depth; } | psxy -O -K $R $X -L -G200 >> "$eps_file"
{ echo 50 $min_depth; echo 50 $max_depth; } | psxy -O -K $R2 $X >> "$eps_file"
{ echo 100 $min_depth; echo 100 $max_depth; } | psxy -O -K $R2 $X >> "$eps_file"
{ echo 150 $min_depth; echo 150 $max_depth; } | psxy -O -K $R2 $X >> "$eps_file"

# VERTICAL VELOCITIES
awk '{print $4,$1}' $TMPFILE | psxy -O -K  -Mn $R $X -W4/coral >> "$eps_file"
awk '{print $8,$1}' $TMPFILE | psxy -O -K  -Mn $R $X -W4/SeaGreen >> "$eps_file"
	
# MEAN ABSOLUTE DEVIATIONS
awk '{print $5,$1,$4}' $TMPFILE | grep -vi nan | psxy -O -K   $R $X -Sc0.1c -Gcoral >> "$eps_file"
awk '{print $9,$1,$8}' $TMPFILE | grep -vi nan | psxy -O -K   $R $X -Sc0.1c -GSeaGreen >> "$eps_file"

# NUMBER OF SAMPLES
awk '{print $6,$1,$5}' $TMPFILE | sed '/nan/s/.*/nan/' | psxy -O -K  -Mn $R2 $X -W1/coral >> "$eps_file"
awk '{print $10,$1,$9}' $TMPFILE | sed '/nan/s/.*/nan/' | psxy -O -K  -Mn $R2 $X -W1/SeaGreen >> "$eps_file"

# SEABED
[ -n "$water_depth" ] && {
	echo $XMIN $blim;
	echo 0.35 $blim;
	echo 0.35 $water_depth;
	echo $XMIN $water_depth;
} | psxy -O -K $R $X -G204/153/102 >> "$eps_file"

# LABELS
echo 0.02 -0.05 10 0 0 TL $out_basename $run_label | pstext -O -K -Gblue -N $U $X >> "$eps_file"
echo 0.6 0.98 12 0 0 BR m.a.d. | pstext -O -K $U $X >> "$eps_file"

if [ 0 -eq `echo "($max_depth-$min_depth)>1000"|bc` ]
then
	depth_tics=f10a100
else
	depth_tics=f100a500
fi

psbasemap -O -K $R $X -Bf0.01a10-10.05:"Vertical Velocity [m/s]                               ":/$depth_tics:"Depth [m]":WeS >> "$eps_file"
psbasemap -O -K $R $X -Ba10-9.95S >> "$eps_file"
psbasemap -O -K $R $X -Ba10-9.85S >> "$eps_file"

psbasemap -O -K $R2 $X -Bf10a1000-950:"                                     # of Samples":N >> "$eps_file"
psbasemap -O -K $R2 $X -Ba1000-900N >> "$eps_file"
psbasemap -O $R2 $X -Ba1000-850N >> "$eps_file"
		 
rm $TMPFILE
[ -n "`which fixbb`" ] && fixbb "$eps_file"

cd "$PWD"
rm -rf /tmp/$$

